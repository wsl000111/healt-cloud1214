server:
  port: 10010
spring:
  application:
    name: gateway
  cloud:
    nacos:
      #server-addr: 192.168.0.15:8848
      server-addr: localhost:8888
    gateway:
#      discovery:
#        locator:
#          enabled: false # 表明gateway开启服务注册和发现功能， 动态路由
#          lower-case-service-id: true
      routes: # 网关路由配置
        - id: orders-service # 路由id，自定义，唯一即可
          uri: lb://ordersapi # 路由目标地址，lb是负载均衡，后面跟服务名称
          predicates: # 路由断言，判断请求是否符合路由规则的条件
            - Path=/ordersapi/** # 通过path路由名称选择要访问的服务，ordersapi是网关路径中的路由名称
          filters: # 针对某个路由添加过滤器
            - StripPrefix=1 #必须添加StripPrefix，去除网关路径中的路由名称，否则无法访问到相关服务
        - id: checkupapi-service
          uri: lb://checkupapi
          predicates:
            - Path=/checkupapi/**
          filters:
            - StripPrefix=1

      default-filters: # 全局默认过滤器，对所有路由生效
      globalcors: # 全局的跨域处理
        add-to-simple-url-handler-mapping: true # 解决options请求被拦截问题
        corsConfigurations:
          '[/**]':
#            allowedOrigins: # 允许哪些网站的跨域请求(前端服务器地址)
#              - "http://localhost:8081"
#              - "http://localhost:8090"
#              - "http://localhost:8080"
            allowedOrigins: "*"
            allowedMethods: # 允许的跨域ajax的请求方式
              - "GET"
              - "POST"
              - "DELETE"
              - "PUT"
              - "OPTIONS"
            allowedHeaders: "*" # 允许在请求中携带的头信息
            allowCredentials: true # 是否允许携带cookie
            maxAge: 360000 # 这次跨域检测的有效期